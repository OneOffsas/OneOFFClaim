// src/pages/register.jsx
import { useState } from 'react';
import { auth } from '../firebase';
import { createUserWithEmailAndPassword } from 'firebase/auth';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';

const Register = () => {
  const [email, setEmail] = useState('');
  const [nom, setNom] = useState('');
  const [prenom, setPrenom] = useState('');
  const [password, setPassword] = useState('');
  const [message, setMessage] = useState('');
  const navigate = useNavigate();

  const handleRegister = async (e) => {
    e.preventDefault();
    setMessage('⏳ Création du compte...');

    try {
      const userCredential = await createUserWithEmailAndPassword(auth, email, password);

      const userData = {
        email: email,
        nom: nom,
        prenom: prenom,
        role: 'Client',
        actif: true,
      };

      // ✅ Remplace bien ici l’URL par celle de ton Apps Script
      const response = await axios.post(
        'https://script.google.com/macros/s/AKfycbzm3MrvKRQy75IMnHosYHC1zHvIIxq-kf53ZwV9J2YatrP6C90MCO7JJHjSFxOnQdle/exec',
        { ...userData }
      );

      if (response.data.result === 'success') {
        setMessage('✅ Inscription réussie ! Redirection en cours...');
        setTimeout(() => navigate('/login'), 2000);
      } else {
        setMessage('❌ Erreur lors de l\'enregistrement Sheets.');
      }
    } catch (error) {
      if (error.code === 'auth/email-already-in-use') {
        setMessage('❌ Cette adresse email est déjà utilisée.');
      } else if (error.message.includes('Network Error')) {
        setMessage('❌ Erreur réseau. Vérifie ta connexion.');
      } else {
        setMessage(`❌ Erreur : ${error.message}`);
      }
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-violet-600 to-blue-800 px-6">
      <div className="bg-white bg-opacity-90 shadow-xl rounded-lg p-10 w-full max-w-md backdrop-blur-md">
        <h2 className="text-3xl font-bold text-center text-gray-800 mb-6">Créer un compte</h2>
        <form onSubmit={handleRegister} className="space-y-4">
          <input
            type="text"
            placeholder="Prénom"
            value={prenom}
            onChange={(e) => setPrenom(e.target.value)}
            className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-400 focus:outline-none placeholder-gray-400"
            required
          />
          <input
            type="text"
            placeholder="Nom"
            value={nom}
            onChange={(e) => setNom(e.target.value)}
            className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-400 focus:outline-none placeholder-gray-400"
            required
          />
          <input
            type="email"
            placeholder="Adresse email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-400 focus:outline-none placeholder-gray-400"
            required
          />
          <input
            type="password"
            placeholder="Mot de passe"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-400 focus:outline-none placeholder-gray-400"
            required
          />
          <button
            type="submit"
            className="w-full py-3 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700 transition duration-300"
          >
            S'inscrire
          </button>
        </form>
        {message && <p className="mt-4 text-center text-sm text-gray-700">{message}</p>}
      </div>
    </div>
  );
};

export default Register;
